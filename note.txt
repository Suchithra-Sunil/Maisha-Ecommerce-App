ANGULAR
---------
npm-- node package module/manager
To check npm version - (npm -v)
To check angular version - (ng -v)
  
install 
  - npm i -g @angular/cli@latest

project creation
  - ng new projectname

running command
  - ng serve --open (ng s --o)    

Angular Technologies
--------------------
-html
-css
-typescript(making dynamic)
     -strictly typed language(data type should be specified) ex:(number:any)

Transpiling - brower convert ts code to js while running  

node module installation - npm i(after clone process)

-root modules
   -root component
     -we can create sub components inside the root module 
   -sub modules
     -components  


module-ts file manages all the components inside that module
component - ts html css 
          - selector used to display the component

To create new component
      -ng generate component component_name   (ng g c component_name)       

-- In index.html only root component works. Other sub components are called in root component

Working cycle of angular component
----------------------------------
constructor()--> ngOnInit()--> Other methods



Data Binding In Angular
-----------------------
ts - component
html - view
1. One way Binding
------------------
 1.1  ts to html (component to view data sharing)
   
   1.1.1  String interpollation  {{}} 
   1.1.2  Property binding     [property_name]="data"

 1.2  html to ts (view to component)
   
   1.2.1  Event binding   (eventname)="method()"
   1.2.2  $event binding  (eventname)="method($event)"   -> used for retrieving some data 
   1.2.3  Event binding with template rendering variable--  #variableName  

2. Two way binding
------------------
 2.1 ngModel  [(ngModel)]="variable" 
    -- FormsModule - module used to apply ngModel


Path Setting In Angular
----------------------
path set in root module routing file(app-routing.module.ts) 
each page need different paths 
landing page path is empty(" ") 
router-outlet should give in app-component.html

Redirection In Angular
---------------------
method - navigateByUrl(path) 
class - Router
module - AppRoutingModule 

folder -> files ->class ->methods 

Dependency injection(like inheritance)
-------------------
to use a method of class inside another class
used in constructor 

    syntax--- accessSpecifier reference:ClassName 

   access specifiers - private/public 
       private - can use the injection class only in that class
       public - can use the injection class in other classes of that file


Angular Services
----------------
Its a file in angular
All component can access the content of service file
How to create  --  ng g s filename (ng generate service filename) 


Angular Directives
------------------
Used to manipulate DOM

1. Component Directives

2. Structural Directives
    - *ngFor
    - *ngIf

3. Attribute Directives
    - [ngclass]


Form Validation In Angular
-------------------------
     1. Template Driven Form
     2. Model Driven Form


MODEL DRIVEN Form
-----------------
1. reactive Form
    -ReactiveFormsModule - module used to build model form 
    -FormBuilder - class used to build model form

   -A model contains -- form Group
                     -- array
                     -- controller 
                     

Local Storage In Angular 
------------------------
C - localStorage.setItem()
R - localStorage.getItem()
U - localStorage.setItem() 
D - localStorage.removeItem() 


Child Parent Communication In Angular
-------------------------------------

parent to child data sharing
----------------------------
   @Input() - decorator used to share data from parent to child

Child To Parent Communication
-----------------------------
  

Date And Time In Angular
------------------------
Date - class used to access current date data in Angular

Angular Pipes
-------------
used to convert datas to another format

Event Creation In Angular (Creating User-Defined events)
------------------------------
EventEmitter - class used to create events
emit() - A method used to specify when the event should happen

API Creation In Angular
-----------------------
HttpClientModule - Module used to generate api called
HttpClient - Class 
   
   Methods
   -------
   get post put patch delete 
---------------------------------------------------------------
Asynchronous in js
------------------
   promise - then()
           - catch() 
 
Asynchronous in Ts   rxjs(reactive extension for js) 
------------------
  observable - subscribe()
             - catch() 
-----------------------------------------------------------
Headers Creation In Angular
---------------------------
HttpHeaders - Class used to generate headers 

Lazy-Loading
-------------
Technology used to create lazy loaded module for faster loading of high traffic pages.
Creating New Module
      - ng g module modulename --route modulename --module appmodule 

- all product view
- single product view
- edit product
- delete product
- add new product

Json Server
-----------
To run json files
npm i --save json-Server 

npx json-server --watch filename --port 3000

Access Params From URL 
----------------------
ActivatedRoute - class used to access params  (A class in router module)
params - method used to access params 

Pipe Creation In Angular
------------------------
Creation
   - ng g pipe pipename

transform(value,filterstring,propName)
value= on which data the pipe is to be applied
filterstring = keyword used for searching(to filter data)
propName = filter applying Property in data

Data sharing from Module To Module
----------------------------------
Behaviour Subject - rxjs
 Reactive Extension for JS - library used to handing Asynchronous methods (ex.subscribe)


1. Import behaviour subject
2. Create an object of behaviour subject
3. send the data using next method 
4. access data using subscribe 

